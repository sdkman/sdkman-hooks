@import domain._
@(candidate: Candidate, version: String, platform: Platform)#!/bin/bash
#Post Hook: default-tarball
function __sdkman_post_installation_hook {
    __sdkman_echo_debug "No @{platform.name} post-install hook found for @{candidate.name} @version."

    __sdkman_check_commands_present || return 1

    __sdkman_validate_binary_input "$binary_input" || return 1

    local present_dir="$(pwd)"
    local work_dir="${SDKMAN_DIR}/tmp/out"

    echo ""
    __sdkman_echo_green "Repackaging @{candidate.name} @version..."

    mkdir -p "$work_dir"
    /usr/bin/env tar zxf "$binary_input" -C "$work_dir"

    cd "$work_dir"
    /usr/bin/env zip -qyr "$zip_output" .
    cd "$present_dir"

    echo ""
    __sdkman_echo_green "Done repackaging..."

    __sdkman_echo_debug "Cleaning up residual files..."
    rm -f "$binary_input"
    rm -rf "$work_dir"
}

function __sdkman_validate_binary_input {
    if ! tar tzf "$1" &> /dev/null; then
        __sdkman_echo_red "Download has failed, aborting!"
        echo ""
        __sdkman_echo_red "Can not install @{candidate.name} @version at this time..."
        return 1
    fi
}

function __sdkman_check_commands_present {
    if ! which tar &> /dev/null || ! which gzip &> /dev/null; then
        __sdkman_echo_red 'tar and/or gzip not available on this system.'
        echo ""
        __sdkman_echo_no_colour "Please install tar/gzip on your system using your favourite package manager."
        return 1
    fi
}
